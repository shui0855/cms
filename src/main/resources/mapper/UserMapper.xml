<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.stackoverflow.cms.dao.UserDAO">

    <resultMap type="net.stackoverflow.cms.model.entity.User" id="baseMap">
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="telephone" column="telephone" jdbcType="VARCHAR"/>
        <result property="enable" column="enable" jdbcType="INTEGER"/>
        <result property="builtin" column="builtin" jdbcType="INTEGER"/>
        <result property="ttl" column="ttl" jdbcType="INTEGER"/>
        <result property="limit" column="limit" jdbcType="INTEGER"/>
        <result property="lock" column="lock" jdbcType="INTEGER"/>
        <result property="failure" column="failure" jdbcType="INTEGER"/>
        <result property="ts" column="ts" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="where">
        <where>
            <if test="eqWrapper != null">
                <foreach collection="eqWrapper.entrySet()" index="column" item="value">
                    <if test="column != null and value != null">
                        and `${column}` = #{value}
                    </if>
                </foreach>
            </if>
            <if test="neqWrapper != null">
                <foreach collection="neqWrapper.entrySet()" index="column" item="value">
                    <if test="column != null and value != null">
                        and `${column}` != #{value}
                    </if>
                </foreach>
            </if>
            <if test="inWrapper != null">
                <foreach collection="inWrapper.entrySet()" index="column" item="values">
                    <if test="values != null and values.size() > 0">
                        and `${column}` in
                        <foreach collection="values" item="value" open="(" separator="," close=")">
                            #{value}
                        </foreach>
                    </if>
                </foreach>
            </if>
            <if test="ninWrapper != null">
                <foreach collection="ninWrapper.entrySet()" index="column" item="values">
                    <if test="values != null and values.size() > 0">
                        and `${column}` not in
                        <foreach collection="values" item="value" open="(" separator="," close=")">
                            #{value}
                        </foreach>
                    </if>
                </foreach>
            </if>
            <if test="keyWrapper != null and keyWrapper.size() > 0">
                <foreach collection="keyWrapper.entrySet()" index="key" item="columns">
                    <if test="columns != null and columns.size() > 0">
                        and
                        <foreach collection="columns" item="column" open="(" separator=" or " close=")">
                            `${column}` like CONCAT('%',#{key},'%')
                        </foreach>
                    </if>
                </foreach>
            </if>
        </where>
    </sql>

    <select id="countWithQuery" resultType="int">
        select COUNT(*) from `user`
        <include refid="where"/>
    </select>

    <select id="select" resultMap="baseMap">
        select * from `user` where `id` = #{id}
    </select>

    <select id="selectAll" resultMap="baseMap">
        select * from `user`
    </select>

    <select id="selectWithQuery" resultMap="baseMap">
        select * from `user`
        <include refid="where"/>
        <if test="sortWrapper != null and sortWrapper.size() > 0">
            order by
            <foreach collection="sortWrapper.entrySet()" index="s" item="o" separator=",">
                `${s}` ${o}
            </foreach>
        </if>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <insert id="insert">
        insert into `user`
        (`id`, `username`, `password`, `email`, `telephone`, `enable`, `builtin`, `ttl`, `limit`, `lock`, `failure`, `ts`)
        values
        (#{id}, #{username}, #{password}, #{email}, #{telephone}, #{enable}, #{builtin}, #{ttl}, #{limit}, #{lock}, #{failure}, #{ts})
    </insert>

    <insert id="batchInsert" parameterType="list">
        insert into `user`
        (`id`, `username`, `password`, `email`, `telephone`, `enable`, `builtin`, `ttl`, `limit`, `lock`, `failure`,
        `ts`)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.id}, #{item.username}, #{item.password}, #{item.email}, #{item.telephone}, #{item.enable},
            #{item.builtin}, #{item.ttl}, #{item.limit}, #{item.lock}, #{item.failure}, #{item.ts})
        </foreach>
    </insert>

    <delete id="delete" parameterType="string">
        delete from `user` where `id` = #{id}
    </delete>

    <delete id="batchDelete" parameterType="list">
        delete from `user` where `id` in
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteWithQuery">
        delete from `user`
        <include refid="where"/>
    </delete>

    <update id="update" parameterType="net.stackoverflow.cms.model.entity.User">
        update `user`
        <set>
            <if test="username != null">
                `username` = #{username},
            </if>
            <if test="password != null">
                `password` = #{password},
            </if>
            <if test="email != null">
                `email` = #{email},
            </if>
            <if test="telephone != null">
                `telephone` = #{telephone},
            </if>
            <if test="enable != null">
                `enable` = #{enable},
            </if>
            <if test="builtin != null">
                `builtin` = #{builtin},
            </if>
            <if test="ttl != null">
                `ttl` = #{ttl},
            </if>
            <if test="limit != null">
                `limit` = #{limit},
            </if>
            <if test="lock != null">
                `lock` = #{lock},
            </if>
            <if test="failure != null">
                `failure` = #{failure},
            </if>
            <if test="ts != null">
                `ts` = #{ts},
            </if>
        </set>
        where `id` = #{id}
    </update>

    <update id="batchUpdate" parameterType="list">
        <foreach collection="list" item="item" open="" close="" separator=";">
            update `user`
            <set>
                <if test="item.username != null">
                    `username` = #{item.username},
                </if>
                <if test="item.password != null">
                    `password` = #{item.password},
                </if>
                <if test="item.email != null">
                    `email` = #{item.email},
                </if>
                <if test="item.telephone != null">
                    `telephone` = #{item.telephone},
                </if>
                <if test="item.enable != null">
                    `enable` = #{item.enable},
                </if>
                <if test="item.builtin != null">
                    `builtin` = #{item.builtin},
                </if>
                <if test="item.ttl != null">
                    `ttl` = #{item.ttl},
                </if>
                <if test="item.limit != null">
                    `limit` = #{item.limit},
                </if>
                <if test="item.lock != null">
                    `lock` = #{item.lock},
                </if>
                <if test="item.failure != null">
                    `failure` = #{item.failure},
                </if>
                <if test="item.ts != null">
                    `ts` = #{item.ts},
                </if>
            </set>
            where `id` = #{item.id}
        </foreach>
    </update>

    <update id="updateWithQuery">
        update `user`
        <set>
            <if test="setWrapper != null">
                <if test="setWrapper.id != null">
                    `id` = #{setWrapper.id},
                </if>
                <if test="setWrapper.username != null">
                    `username` = #{setWrapper.username},
                </if>
                <if test="setWrapper.password != null">
                    `password` = #{setWrapper.password},
                </if>
                <if test="setWrapper.email != null">
                    `email` = #{setWrapper.email},
                </if>
                <if test="setWrapper.telephone != null">
                    `telephone` = #{setWrapper.telephone},
                </if>
                <if test="setWrapper.enable != null">
                    `enable` = #{setWrapper.enable},
                </if>
                <if test="setWrapper.builtin != null">
                    `builtin` = #{setWrapper.builtin},
                </if>
                <if test="setWrapper.ttl != null">
                    `ttl` = #{setWrapper.ttl},
                </if>
                <if test="setWrapper.limit != null">
                    `limit` = #{setWrapper.limit},
                </if>
                <if test="setWrapper.lock != null">
                    `lock` = #{setWrapper.lock},
                </if>
                <if test="setWrapper.failure != null">
                    `failure` = #{setWrapper.failure},
                </if>
                <if test="setWrapper.ts != null">
                    `ts` = #{setWrapper.ts},
                </if>
            </if>
        </set>
        <include refid="where"/>
    </update>
</mapper>